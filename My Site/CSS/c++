#include <iostream>
#include <cmath>
#include <cstdio>

const double PI = 3.14159265358979323846;
const double fc = 10e3;  // carrier frequency
const double fd = 100;   // frequency deviation

int main() {
    double t;
    double signal;
    double bit_rate = 1e3; // bit rate
    double T = 1 / bit_rate; // bit duration
    int num_bits = 8; // number of bits to modulate

    // open the GNU plot pipe
    FILE* gnuplotPipe = popen("gnuplot -persist", "w");
    fprintf(gnuplotPipe, "set xlabel 'Time (s)'\n");
    fprintf(gnuplotPipe, "set ylabel 'Amplitude'\n");
    fprintf(gnuplotPipe, "set title 'Binary Frequency Shift Keying (BFSK)'\n");
    fprintf(gnuplotPipe, "set grid\n");
    fprintf(gnuplotPipe, "plot '-' using 1:2 with lines title 'BFSK Signal'\n");

    // generate and modulate the BFSK signal
    for (int i = 0; i < num_bits; i++) {
        int bit = rand() % 2;  // randomly generate a 0 or 1
        for (double t = 0; t <= T; t += 0.001) {
            if (bit == 0) {
                signal = sin(2 * PI * (fc - fd) * t);
            } else {
                signal = sin(2 * PI * (fc + fd) * t);
            }
            fprintf(gnuplotPipe, "%lf %lf\n", t, signal);
        }
    }

    fprintf(gnuplotPipe, "e\n"); // close the plot
    fflush(gnuplotPipe);
    pclose(gnuplotPipe);
    return 0;
}
